/*! matchbox - v0.0.0 - 2014-03-18
* https://github.com/gpbmike/matchbox
* Copyright (c) 2014 Mike Horn; Licensed MIT */
!function(){"use strict";DS.FirebaseAdapter=DS.Adapter.extend({init:function(){if(!this.firebase||"object"!=typeof this.firebase)throw new Error("Please set the `firebase` property on the adapter.");this._ref=this.firebase.ref()},generateIdForRecord:function(){return this._ref.push().name()},find:function(a,b,c){var d=!1,e=this._getRef(b,c);return new Ember.RSVP.Promise(function(f,g){e.on("value",function(h){var i=h.val();d?i?a.getById(b.typeKey,c).setProperties(i).save():(a.getById(b.typeKey,c).destroyRecord(),e.off()):(d=!0,i?(i.id=h.name(),Ember.run(null,f,i)):(e.off(),Ember.run(null,g,new Ember.Error("No result found."))))},function(a){d||Ember.run(null,g,a)})},"DS: FirebaseAdapter#find "+b+" to "+e.toString())},findAll:function(a,b){function c(c){if(f){var d=c.val();d.id=c.name(),a.push(b,d)}}function d(c){if(f){var d=a.getById(b,c.name());null!==d&&(d.setProperties(c.val()),d.save())}}function e(c){if(f){var d=a.getById(b,c.name());null!==d&&a.deleteRecord(d)}}var f=!1,g=this._getRef(b);return new Ember.RSVP.Promise(function(a,b){function h(a){f||(f=!0,Ember.run(null,b,a))}function i(b){f=!0;var c=Ember.A([]);b.forEach(function(a){var b=a.val();b.id=a.name(),c.push(b)}),Ember.run(null,a,c)}g.on("child_added",c,h),g.on("child_changed",d,h),g.on("child_removed",e,h),g.once("value",i,h)},"DS: FirebaseAdapter#findAll "+b+" to "+g.toString())},createRecord:function(a,b,c){var d=c.serialize({includeId:!1}),e=this._getRef(b,c.id);return new Ember.RSVP.Promise(function(a,b){e.set(d,function(c){c?Ember.run(null,b,c):Ember.run(null,a)})},"DS: FirebaseAdapter#createRecord "+b+" to "+e.toString())},updateRecord:function(){return this.createRecord.apply(this,arguments)},deleteRecord:function(a,b,c){var d=this._getRef(b,c.id);return new Ember.RSVP.Promise(function(a,b){d.remove(function(c){c?Ember.run(null,b,c):Ember.run(null,a)})},"DS: FirebaseAdapter#deleteRecord "+b+" to "+d.toString())},pathForType:function(a){var b=Ember.String.camelize(a);return Ember.String.pluralize(b)},_getRef:function(a,b){var c=this._ref;return a&&(c=c.child(this.pathForType(a.typeKey))),b&&(c=c.child(b)),c}})}();